let nodes={paths:["math/light-transport/cosine-weighted-sampling.html","math/light-transport/direct-light-sampling-pdf.html","math/light-transport/n-dot-l-from-rendering-equation.html","math/light-transport/perfect-reflection-and-refraction-pdf.html","math/light-transport/polarized-light.html","math/light-transport/ratio-for-diffuse-and-specular-bounce.html","math/light-transport/spherical-integrals.html","math/light-transport/the-rendering-equation.html","math/light-transport/why-divide-albedo-by-π.html","math/constructing-an-orthonormal-basis-around-a-normal.html","math/dirac-delta-for-unit-sphere.html","math/hindley-milner.html","math/integration-primer.html","math/monte-carlo-methods.html","math/r(n)-low-discrepancy-sequence.html","math/sampling-discrete-distribution-in-o(1).html","shaders/anti-aliasing-for-2d-sdf.html","shaders/matrix-inversion.html","shaders/sh-to-unity-shader-coefficients.html","shaders/vrchat-proposals.html","shaders/world-position-from-depth.html"],nodeCount:21,linkSources:[0,0,0,2,2,2,3,6,6,7,8,10],linkTargets:[7,13,6,7,6,10,5,12,7,13,6,6],labels:["Cosine weighted sampling","Direct light sampling PDF","N dot L from rendering equation","Perfect reflection and refraction PDF","Polarized light","Ratio for diffuse and specular bounce","Spherical integrals","The rendering equation","Why divide albedo by π","Constructing an orthonormal basis around a normal","Dirac delta for unit sphere","Hindley-Milner","Integration primer","Monte carlo methods","R(n) low discrepancy sequence","Sampling discrete distribution in O(1)","Anti-aliasing for 2D sdf","Matrix inversion","SH to Unity shader coefficients","VRChat proposals","World position from depth"],radii:[6.4375,3,6.4375,4.493055555555555,3,4.493055555555555,7,6.888888888888889,4.493055555555555,3,5.638888888888889,3,4.493055555555555,5.638888888888889,3,3,3,3,3,3,3],linkCount:12},attractionForce=1,linkLength=10,repulsionForce=150,centralForce=3,edgePruning=100